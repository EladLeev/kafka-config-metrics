{{- $commonLabels := .Values.commonLabels -}}
{{- $deploymentLabels := default .Values.deploymentLabels dict -}}
{{- $podLabels := default .Values.podLabels dict -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-config-metrics.fullname" . }}
  labels:
    {{- include "kafka-config-metrics.labels" . | nindent 4 }}
    {{- if or $commonLabels $deploymentLabels }}
    {{- toYaml (merge $commonLabels $deploymentLabels) | nindent 4 | trimSuffix "\n" }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kafka-config-metrics.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kafka-config-metrics.selectorLabels" . | nindent 8 }}
        {{- if or $commonLabels $podLabels }}
        {{- toYaml (merge $commonLabels $podLabels) | nindent 8 | trimSuffix "\n" }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kafka-config-metrics.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "/usr/bin/kcm-exporter" ]
          args: [ "--config", "/opt/kcm/config/customconfig.toml" ]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
          volumeMounts:
          - name: configmap
            mountPath: /opt/kcm/config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      volumes:
      - name: configmap
        configMap:
          name: {{ include "kafka-config-metrics.fullname" . }}-cm
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
